addTiles() %>%
addPolygons(fillColor = topo.colors(10, alpha = NULL), stroke = FALSE)
library(maps)
mapStates = map("state", fill = TRUE, plot = FALSE)
head(mapStates)
leaflet(loc) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~colorQuantile("YlOrRd", ALAND)(ALAND),
highlightOptions = highlightOptions(color = "white", weight = 2,bringToFront = TRUE))
leaflet(loc) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
highlightOptions = highlightOptions(color = "white", weight = 2,bringToFront = TRUE))
str(loc)
names(loc)
loc   <- rgdal::readOGR(loc_st)
leaflet(loc) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~colorQuantile("YlOrRd", ESRI)(ESRI),
highlightOptions = highlightOptions(color = "white", weight = 2,bringToFront = TRUE))
#cty   <- sf::st_read('../parliamentary-constituencies/india_pc_2014.shp', repair=TRUE)
#cty   <- readShapePoly('../parliamentary-constituencies/india_pc_2014.shp', repair=TRUE)
require(sp)
require(maptools)
require(ggplot2)
require(data.table)
require(leaflet)
loc_st <- '../States/Admin2.shp'
loc_pc <- '../parliamentary-constituencies/india_pc_2014.shp'
loc_ac <- '../assembly-constituencies/India_AC.shp'
loc   <- rgdal::readOGR(loc_st)
loc.f <- data.table(fortify(loc))
name  <- data.table(loc@data, row.names(loc@data))
setnames(name, c('name', 'id'))
loc.f   <- merge(x = loc.f, y = name, all.x=TRUE, by.x='id', by.y='id')
loc.mid <- loc.f[, .(long=mean(long), lat=mean(lat)), by=name]
gg <- ggplot()
cnty.geom <- geom_map(data=loc.f, map=loc.f, aes(map_id=id, x=long, y=lat, fill=name), color='grey', size=0.25, alpha=0.5)
cnty.text <- geom_text(data=loc.mid, aes(x=long, y=lat, label=name), color='red', size=2, alpha=1)
cnty.dot  <- geom_point(data=loc.mid, aes(x=long, y=lat), color='blue', size=1, alpha=1)
gg <- gg + cnty.geom
gg <- gg + cnty.text
gg <- gg + cnty.dot
gg <- gg + coord_map()
gg <- gg + labs(x="", y="")
gg <- gg + theme(plot.background = element_rect(fill = "transparent", colour = NA),
panel.border = element_blank(),
panel.background = element_rect(fill = "transparent", colour = NA),
panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = 'none')
gg
loc   <- rgdal::readOGR(loc_pc)
loc.f <- data.table(fortify(loc))
name  <- data.table(loc@data, row.names(loc@data))
setnames(name, c('name', 'id'))
## GGPLOT
gg <- ggplot()
cnty.geom <- geom_map(data=loc.f, map=loc.f, aes(map_id=id, x=long, y=lat, fill=name), color='grey', size=0.25, alpha=0.5)
gg <- gg + cnty.geom
gg <- gg + cnty.text
gg <- gg + cnty.dot
gg <- gg + coord_map()
gg <- gg + labs(x="", y="")
gg <- gg + theme(plot.background = element_rect(fill = "transparent", colour = NA),
panel.border = element_blank(),
panel.background = element_rect(fill = "transparent", colour = NA),
panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = 'none')
gg
cnty.geom <- geom_map(data=loc.f, map=loc.f, aes(map_id=id, x=long, y=lat, fill=name), color='grey', size=0.25, alpha=0.5)
gg <- gg + cnty.geom
gg <- gg + cnty.text
gg <- gg + cnty.dot
gg <- gg + coord_map()
gg <- gg + labs(x="", y="")
gg <- gg + theme(plot.background = element_rect(fill = "transparent", colour = NA),
panel.border = element_blank(),
panel.background = element_rect(fill = "transparent", colour = NA),
panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = 'none')
gg
gg <- gg + cnty.dot
gg <- gg + coord_map()
gg <- gg + labs(x="", y="")
gg <- gg + theme(plot.background = element_rect(fill = "transparent", colour = NA),
panel.border = element_blank(),
panel.background = element_rect(fill = "transparent", colour = NA),
panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = 'none')
gg
gg <- ggplot()
cnty.geom <- geom_map(data=loc.f, map=loc.f, aes(map_id=id, x=long, y=lat, fill=name), color='grey', size=0.25, alpha=0.5)
gg <- gg + cnty.dot
gg <- gg + coord_map()
gg <- gg + labs(x="", y="")
gg <- gg + theme(plot.background = element_rect(fill = "transparent", colour = NA),
panel.border = element_blank(),
panel.background = element_rect(fill = "transparent", colour = NA),
panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = 'none')
gg
loc   <- rgdal::readOGR(loc_pc)
gg <- ggplot()
cnty.geom <- geom_map(data=loc.f, map=loc.f, aes(map_id=id, x=long, y=lat, fill=name), color='grey', size=0.25, alpha=0.5)
gg <- gg + cnty.dot
gg <- gg + coord_map()
gg <- gg + labs(x="", y="")
gg <- gg + theme(plot.background = element_rect(fill = "transparent", colour = NA),
panel.border = element_blank(),
panel.background = element_rect(fill = "transparent", colour = NA),
panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = 'none')
gg
rm(list = ls())
require(sp)
require(maptools)
require(ggplot2)
require(data.table)
require(leaflet)
loc_st <- '../States/Admin2.shp'
loc_pc <- '../parliamentary-constituencies/india_pc_2014.shp'
loc_ac <- '../assembly-constituencies/India_AC.shp'
loc   <- rgdal::readOGR(loc_pc)
loc.f <- data.table(fortify(loc))
name  <- data.table(loc@data, row.names(loc@data))
## GGPLOT
gg <- ggplot()
gg <- gg + coord_map()
gg <- gg + labs(x="", y="")
gg <- gg + theme(plot.background = element_rect(fill = "transparent", colour = NA),
panel.border = element_blank(),
panel.background = element_rect(fill = "transparent", colour = NA),
panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
legend.position = 'none')
gg
require(sp)
require(maptools)
require(ggplot2)
require(data.table)
require(leaflet)
loc_st <- '../States/Admin2.shp'
loc_pc <- '../parliamentary-constituencies/india_pc_2014.shp'
loc_ac <- '../assembly-constituencies/India_AC.shp'
loc   <- rgdal::readOGR(loc_st)
leaflet(loc) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~colorQuantile("YlOrRd", ESRI)(ESRI),
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE))
leaflet(loc) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
#fillColor = ~colorQuantile("YlOrRd", ESRI)(ESRI),
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE))
loc.f <- data.table(fortify(loc))
head(loc.f)
leaflet(loc) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~id,
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE))
leaflet(loc) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~order,
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE))
loc   <- rgdal::readOGR(loc_pc)
leaflet(loc) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
#fillColor = ~,
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE))
leaflet(loc) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~name,
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE))
leaflet(loc) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~loc$ST_NAME,
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE))
leaflet(loc) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~loc$ST_NAME,
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE))
head(loc$ST_NAME)
unique(loc$ST_NAME)
names(loc)
unique(loc$PC_NAME)
leaflet(loc) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~ST_NAME,
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE))
leaflet(loc) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~pal(ST_NAME),
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE))
leaflet(loc) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~colorQuantile("YlOrRd", ST_NAME)(ST_NAME),
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE))
loc   <- rgdal::readOGR(loc_st)
leaflet(loc) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~ST_NAME,
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE))
names(loc)
leaflet(loc) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~ST_NM,
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE))
leaflet(loc) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = "blue",
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE))
pal <- colorQuantile("YlOrRd", NULL, n = 20)
leaflet(loc) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~pal(ST_NM),
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE))
class(loc)
leaflet(loc) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ST_NM,
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE))
leaflet(loc) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = loc$ST_NM,
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE))
leaflet(loc) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~loc$ST_NM,
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE))
dim(loc)
loc
names(loc)
#cty   <- sf::st_read('../parliamentary-constituencies/india_pc_2014.shp', repair=TRUE)
#cty   <- readShapePoly('../parliamentary-constituencies/india_pc_2014.shp', repair=TRUE)
require(sp)
require(maptools)
require(ggplot2)
require(data.table)
require(leaflet)
loc_st <- '../States/Admin2.shp'
loc_pc <- '../parliamentary-constituencies/india_pc_2014.shp'
loc_ac <- '../assembly-constituencies/India_AC.shp'
loc   <- rgdal::readOGR(loc_st)
leaflet(loc) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~loc$ST_NM,
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE))
loc   <- rgdal::readOGR(loc_pc)
leaflet(loc) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~loc$ST_NM,
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE))
names(loc)
require(sp)
require(maptools)
require(ggplot2)
require(data.table)
require(leaflet)
loc_st <- '../States/Admin2.shp'
loc_pc <- '../parliamentary-constituencies/india_pc_2014.shp'
loc_ac <- '../assembly-constituencies/India_AC.shp'
loc   <- rgdal::readOGR(loc_pc)
leaflet(loc) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~loc$ST_NM,
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE))
loc_ac <- '../eci/AC_Data/States/S28'
loc_pc <- '../eci/PC_Data/States/S28'
loc   <- rgdal::readOGR(loc_pc)
leaflet(loc) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~loc$ST_NM,
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE))
loc   <- rgdal::readOGR(loc_ac)
leaflet(loc) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~loc$ST_NM,
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE))
nameS(loc@data)
namea(loc@data)
names(loc@data)
row.names(loc@data)
loc@data$DIST_NAME
loc_ac <- '../eci/AC_Data/States/S27'
loc_pc <- '../eci/PC_Data/States/S27'
loc   <- rgdal::readOGR(loc_ac)
leaflet(loc) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~loc$ST_NM,
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE))
loc@data$DIST_NAME
loc@data$AC_NAME
loc   <- rgdal::readOGR(loc_pc)
loc@data$ST_CODE
loc@data$ST_NAME
loc_ac <- '../eci/AC_Data/States/S26'
loc_pc <- '../eci/PC_Data/States/S26'
loc   <- rgdal::readOGR(loc_pc)
loc@data$ST_NAME
loc_ac <- '../eci/AC_Data/States/S25'
loc_pc <- '../eci/PC_Data/States/S25'
loc   <- rgdal::readOGR(loc_pc)
loc@data$ST_NAME
loc_ac <- '../eci/AC_Data/States/S24'
loc_pc <- '../eci/PC_Data/States/S24'
loc   <- rgdal::readOGR(loc_pc)
loc@data$ST_NAME
loc_ac <- '../eci/AC_Data/States/S21'
loc_pc <- '../eci/PC_Data/States/S21'
loc   <- rgdal::readOGR(loc_pc)
loc@data$ST_NAME
loc_ac <- '../eci/AC_Data/States/S19'
loc_pc <- '../eci/PC_Data/States/S19'
loc   <- rgdal::readOGR(loc_pc)
loc@data$ST_NAME
loc_ac <- '../eci/AC_Data/States/S15'
loc_pc <- '../eci/PC_Data/States/S15'
loc   <- rgdal::readOGR(loc_pc)
loc@data$ST_NAME
loc_ac <- '../eci/AC_Data/States/S13'
loc_pc <- '../eci/PC_Data/States/S13'
loc   <- rgdal::readOGR(loc_pc)
loc@data$ST_NAME
loc_ac <- '../eci/AC_Data/States/S10'
loc_pc <- '../eci/PC_Data/States/S10'
loc   <- rgdal::readOGR(loc_pc)
loc@data$ST_NAME
loc_ac <- '../eci/AC_Data/States/S10'
loc_pc <- '../eci/PC_Data/States/S10'
loc   <- rgdal::readOGR(loc_pc)
leaflet(loc) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~loc$ST_NM,
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE))
loc$PC_NAME
loc$AREA
loc   <- rgdal::readOGR(loc_ac)
loc$AC_TYPE
loc$AC_HNAME
loc$INDIAASSEM
loc$ST_CODE
loc$CODE_NO
loc   <- rgdal::readOGR(loc_ac)
require(sp)
require(maptools)
require(ggplot2)
require(data.table)
require(leaflet)
# loc_st <- '../States/Admin2.shp'
# loc_pc <- '../parliamentary-constituencies/india_pc_2014.shp'
# loc_ac <- '../assembly-constituencies/India_AC.shp'
loc_ac <- '../eci/AC_Data/States/S10'
loc_pc <- '../eci/PC_Data/States/S10'
loc   <- rgdal::readOGR(loc_ac)
leaflet(loc) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~loc$ST_NM,
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE))
leaflet(loc) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE))
loc@data$AC_NAME
loc$AC_NAME
head(loc@data, 10)
head(loc@data, 2000)
install.packages("spdplyr")
require(spdplyr)
loc
popup <- paste0("NAME: ", loc$AC_NAME, "<br>", "Result: ", loc$AREA)
pal <- colorNumeric(
palette = "YlGnBu",
domain = loc$NO
)
loc$NO
as.numeric(loc$NO)
pal <- colorNumeric(
palette = "YlGnBu",
domain = as.numeric(loc$NO)
)
leaflet(loc) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~pal(NO)
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE))
leaflet(loc) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~pal(NO),
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE))
loc$PERIMETER
pal <- colorNumeric(
palette = "YlGnBu",
domain = loc$PERIMETER
)
leaflet(loc) %>%
addPolygons(color = "#444444", weight = 1, smoothFactor = 0.5,
opacity = 1.0, fillOpacity = 0.5,
fillColor = ~pal(PERIMETER),
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE))
popup <- paste0("NAME: ", loc$AC_NAME, "<br>", "Result: ", loc$AREA)
pal <- colorNumeric(
palette = "YlGnBu",
domain = loc$PERIMETER
)
leaflet(loc) %>%
addPolygons(color = "#444444",
weight = 1,
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5,
fillColor = ~pal(PERIMETER),
popup = popup,
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE))
loc
result <- data.table(NO = 1:224, polls = rnorm(224))
result
result <- tbl(data.table(NO = 1:224, polls = rnorm(224)))
require(tidyverse)
require(tibble)
result <- as.tibble(data.table(NO = 1:224, polls = rnorm(224)))
result
require(dplyr)
a <- loc %>%
left_join(result, by = c('NO' = 'NO'))
a <- loc %>%
left_join(result)
loc
result
result <- as.tibble(data.table(NO = as.factor(1:224), polls = rnorm(224)))
result
a <- loc %>%
left_join(result)
a
a <- loc %>%
left_join(result)
popup <- paste0("NAME: ", loc$AC_NAME, "<br>", "Result: ", loc$polls)
pal <- colorNumeric(
palette = "YlGnBu",
domain = loc$polls
)
leaflet(loc) %>%
addPolygons(color = "#444444",
weight = 1,
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5,
fillColor = ~pal(polls),
popup = popup,
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE))
result <- as.tibble(data.table(NO = as.factor(1:224), polls = rnorm(224)))
loc <- loc %>%
left_join(result)
popup <- paste0("NAME: ", loc$AC_NAME, "<br>", "Result: ", loc$polls)
pal <- colorNumeric(
palette = "YlGnBu",
domain = loc$polls
)
leaflet(loc) %>%
addPolygons(color = "#444444",
weight = 1,
smoothFactor = 0.5,
opacity = 1.0,
fillOpacity = 0.5,
fillColor = ~pal(polls),
popup = popup,
highlightOptions = highlightOptions(color = "white", weight = 2, bringToFront = TRUE))
loc %>% filter(NO == 52)
loc %>% filter(NO == 51)
loc %>% filter(NO == 53)
loc %>% filter(AC_NAME == 'Aurad')
loc %>% filter(NO == 2)
